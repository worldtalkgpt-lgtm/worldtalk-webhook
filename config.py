import os
from dotenv import load_dotenv
from sqlalchemy.ext.asyncio import create_async_engine, AsyncSession
from sqlalchemy.orm import sessionmaker

# ‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
load_dotenv()

# ================================
# üîë –û–°–ù–û–í–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï
# ================================
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID", "0"))

# üîë –ö–ª—é—á OpenAI
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
if not OPENAI_API_KEY:
    print("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env. –ü—Ä–æ–≤–µ—Ä—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏!")

# üîë URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
DATABASE_URL = os.getenv("DATABASE_URL")
if not DATABASE_URL:
    raise ValueError("‚ùå DATABASE_URL –Ω–µ –∑–∞–¥–∞–Ω –≤ .env!")

# ================================
# üî• –ù–ê–°–¢–†–û–ô–ö–ò FAISS –î–õ–Ø –í–°–ï–• –ü–ï–†–°–û–ù–ê–ñ–ï–ô
# ================================
FAISS_CONFIG = {
    "–º–µ—Å—Å–∏": {
        "index_path": "/home/worldtalk_admin/worldtalk/messi/faiss_index_messi.index",
        "mapping_path": "/home/worldtalk_admin/worldtalk/messi/messi_mapping.json",
        "audio_dir": "/home/worldtalk_admin/worldtalk/audio_cache"
    },
    "–º–∏—Å—Ç–µ—Ä –±–∏—Å—Ç": {
        "index_path": "/home/worldtalk_admin/worldtalk/beast/faiss_index_beast.index",
        "mapping_path": "/home/worldtalk_admin/worldtalk/beast/beast_mapping.json",
        "audio_dir": "/home/worldtalk_admin/worldtalk/beast/beast_audio"
    },
    "arni": {
        "index_path": "/home/worldtalk_admin/worldtalk/arni/faiss_index_arni.index",
        "mapping_path": "/home/worldtalk_admin/worldtalk/arni/arni_mapping.json",
        "audio_dir": "/home/worldtalk_admin/worldtalk/arni/arni_audio"
    }
}

# ================================
# üß† –ù–ê–°–¢–†–û–ô–ö–ò –≠–ú–ë–ï–î–î–ò–ù–ì–û–í
# ================================
EMBEDDING_DIMENSION = 3072
EMBEDDING_MODEL_NAME = "text-embedding-3-large"

# ================================
# üóÑÔ∏è –ù–ê–°–¢–†–û–ô–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•
# ================================
engine = create_async_engine(
    DATABASE_URL,
    echo=True,  # –õ–æ–≥–∏—Ä–æ–≤–∞—Ç—å SQL-–∑–∞–ø—Ä–æ—Å—ã
    future=True
)

AsyncSessionLocal = sessionmaker(
    bind=engine,
    class_=AsyncSession,
    expire_on_commit=False,
    autoflush=False
)

# ================================
# ‚úÖ –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò
# ================================
def check_config() -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    errors = []

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
    if not BOT_TOKEN or len(BOT_TOKEN) < 10:
        errors.append("‚ùå BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–∞ OpenAI
    if not OPENAI_API_KEY:
        errors.append("‚ùå OPENAI_API_KEY –Ω–µ –∑–∞–¥–∞–Ω –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ FAISS —Ñ–∞–π–ª–æ–≤ –∏ –∞—É–¥–∏–æ–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    for character, paths in FAISS_CONFIG.items():
        index_path = paths.get("index_path")
        mapping_path = paths.get("mapping_path")
        audio_dir = paths.get("audio_dir")

        if not index_path or not os.path.exists(index_path):
            errors.append(f"‚ùå index_path –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è {character}: {index_path}")
        if not mapping_path or not os.path.exists(mapping_path):
            errors.append(f"‚ùå mapping_path –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è {character}: {mapping_path}")
        if not audio_dir or not os.path.exists(audio_dir):
            errors.append(f"‚ùå –ê—É–¥–∏–æ–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è {character}: {audio_dir}")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç–∏ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤
    if EMBEDDING_DIMENSION != 3072:
        errors.append(f"‚ùå –†–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 3072, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {EMBEDDING_DIMENSION}")

    # –ò—Ç–æ–≥
    if errors:
        print("\n".join(errors))
        return False

    print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞")
    return True

# üöÄ –ê–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –Ω–∞–ø—Ä—è–º—É—é
if __name__ == "__main__":
    check_config()

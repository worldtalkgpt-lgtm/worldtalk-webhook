from aiogram import types
from aiogram.dispatcher import Dispatcher
import logging

from db.session import get_session
from utils.faiss_searcher import FAISSSearcher
from db.user_repo import (
    get_or_create_user,
    set_character_topic,
    reset_other_character_topics
)
from config import FAISS_CONFIG

logger = logging.getLogger(__name__)

CHARACTER_NAME = "–º–µ—Å—Å–∏"
searcher = FAISSSearcher(
    index_path=FAISS_CONFIG[CHARACTER_NAME]["index_path"],
    mapping_path=FAISS_CONFIG[CHARACTER_NAME]["mapping_path"]
)

# üî• –≠—Ç–æ—Ç —Ö–µ–Ω–¥–ª–µ—Ä —Ç–æ–ª—å–∫–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç–µ–º
async def show_goat_topics(callback_query: types.CallbackQuery):
    await callback_query.answer()

    keyboard = types.InlineKeyboardMarkup(row_width=2)
    keyboard.row(
        types.InlineKeyboardButton("üèüÔ∏è –ë–∞—Ä—Å–µ–ª–æ–Ω–∞", callback_data="goat_topic_–ë–∞—Ä—Å–µ–ª–æ–Ω–∞"),
        types.InlineKeyboardButton("üá´üá∑ –ü–°–ñ", callback_data="goat_topic_–ü–°–ñ"),
    )
    keyboard.row(
        types.InlineKeyboardButton("üá¶üá∑ –°–±–æ—Ä–Ω–∞—è –ê—Ä–≥–µ–Ω—Ç–∏–Ω—ã", callback_data="goat_topic_–°–±–æ—Ä–Ω–∞—è –ê—Ä–≥–µ–Ω—Ç–∏–Ω—ã"),
    )
    keyboard.row(
        types.InlineKeyboardButton("üèÜ –ß–ú 2022", callback_data="goat_topic_–ß–µ–º–ø–∏–æ–Ω–∞—Ç –º–∏—Ä–∞ 2022"),
        types.InlineKeyboardButton("üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –°–µ–º—å—è", callback_data="goat_topic_–°–µ–º—å—è"),
    )
    keyboard.row(
        types.InlineKeyboardButton("‚öîÔ∏è –ú–µ—Å—Å–∏ vs –†–æ–Ω–∞–ª–¥—É", callback_data="goat_topic_–ú–µ—Å—Å–∏ vs –†–æ–Ω–∞–ª–¥—É"),
    )

    # üîô –ù–∞–∑–∞–¥
    keyboard.add(types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="select_character"))

    text = (
        "‚îå ‚úÖ –§–µ–π—Å–∫–æ–Ω—Ç—Ä–æ–ª—å –ø—Ä–æ–π–¥–µ–Ω ‚îê\n\n\n"
        "–î–æ—Å—Ç—É–ø –æ—Ç–∫—Ä—ã—Ç.  \n"
        "–ü–µ—Ä–µ–¥ —Ç–æ–±–æ–π ‚Äî –¥–∏–∞–ª–æ–≥ —Å –ª–µ–≥–µ–Ω–¥–æ–π.  \n\n\n"
        "‚îî üá¶üá∑ –í—ã–±–µ—Ä–∏ —Ç–µ–º—É –¥–ª—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ ‚îò"
    )

    await callback_query.message.edit_text(
        text,
        parse_mode="HTML",
        reply_markup=keyboard
    )

# üî• –≠—Ç–æ—Ç —Ö–µ–Ω–¥–ª–µ—Ä —Ç–æ–ª—å–∫–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ç–µ–º—É (–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –º—ã —É–±—Ä–∞–ª–∏ –æ—Ç—Å—é–¥–∞)
async def handle_topic_selected(callback_query: types.CallbackQuery):
    await callback_query.answer()
    topic = callback_query.data.replace("goat_topic_", "").strip()
    async with get_session() as session:
        user = await get_or_create_user(session, callback_query.from_user.id)
        await reset_other_character_topics(session, user.id, CHARACTER_NAME)
        await set_character_topic(session, user.id, CHARACTER_NAME, topic)

        await callback_query.message.answer(
            f"üü¢ –¢—ã –≤—ã–±—Ä–∞–ª —Ç–µ–º—É: <b>{topic}</b>\n<i>–î–∞–≤–∞–π –Ω–∞—á–Ω—ë–º —Ä–∞–∑–≥–æ–≤–æ—Ä...</i>",
            parse_mode="HTML"
        )

def setup(dp: Dispatcher):
    dp.register_callback_query_handler(show_goat_topics, lambda c: c.data == "messi_correct")
    dp.register_callback_query_handler(handle_topic_selected, lambda c: c.data.startswith("goat_topic_"))

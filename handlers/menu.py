from aiogram import types
from aiogram.dispatcher import Dispatcher
from db.session import get_session
from db.user_repo import get_user_by_id

async def send_menu(user_id, target, is_callback=False):
    async with get_session() as session:
        user = await get_user_by_id(session, user_id)

    username = target.from_user.username or "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
    voices = user.voices if user else 0

    menu_text = (
        "<b>‚îå üìã –ü—Ä–æ—Ñ–∏–ª—å ‚îê</b>\n\n"
        f"–ò–º—è: @{username}\n"
        f"ID: {user_id}\n"
        f"–ì–æ–ª–æ—Å–∞: {voices}\n\n"
        "‚ö†Ô∏è –≠—Ç–æ –Ω–µ –∂–∏–≤–æ–π —á–∞—Ç!\n"
        "–ë–æ—Ç –∏—â–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã –∑–≤—ë–∑–¥ –∏–∑ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤.\n"
        "–û—Ç–≤–µ—Ç—ã –º–æ–≥—É—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –≤–∞—à–µ–≥–æ ¬´–≤–æ–ø—Ä–æ—Å–∞¬ª.\n\n"
    )

    keyboard = types.InlineKeyboardMarkup(row_width=2)
    keyboard.add(
        types.InlineKeyboardButton("üåü –ü–µ—Ä—Å–æ–Ω–∞–∂–∏", callback_data="select_character"),
        types.InlineKeyboardButton("üíé –ö—É–ø–∏—Ç—å –≥–æ–ª–æ—Å–∞", callback_data="buy"),
    )
    keyboard.add(
        types.InlineKeyboardButton("üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å", url="https://t.me/supWT"),
        types.InlineKeyboardButton("üéÅ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞", callback_data="referral")
    )
    keyboard.add(
        types.InlineKeyboardButton("‚ÑπÔ∏è –û –±–æ—Ç–µ", callback_data="about_bot")
    )

    if is_callback:
        await target.edit_text(menu_text, reply_markup=keyboard, parse_mode="HTML")
    else:
        await target.reply(menu_text, reply_markup=keyboard, parse_mode="HTML")

def setup(dp: Dispatcher):
    @dp.callback_query_handler(lambda c: c.data == "menu")
    async def show_menu_callback(callback_query: types.CallbackQuery):
        await send_menu(callback_query.from_user.id, callback_query.message, is_callback=True)

    @dp.message_handler(commands=["menu"])
    async def show_menu_command(message: types.Message):
        await send_menu(message.from_user.id, message)
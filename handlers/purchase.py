from aiogram import types
from aiogram.dispatcher import Dispatcher

def setup(dp: Dispatcher):
    @dp.callback_query_handler(lambda c: c.data == "buy")
    async def show_purchase_callback(callback_query: types.CallbackQuery):
        await send_purchase_screen(callback_query.message, is_callback=True)

    @dp.message_handler(commands=["buy"])
    async def show_purchase_command(message: types.Message):
        await send_purchase_screen(message)

async def send_purchase_screen(target, is_callback=False):
    text = (
        "üíé <b>–ù–∞—á–Ω–∏ —Å–≤–æ–π –¥–∏–∞–ª–æ–≥</b>\n\n"
        "WorldTalk ‚Äî —ç—Ç–æ –∂–∏–≤–æ–π —Ä–∞–∑–≥–æ–≤–æ—Ä —Å —Ü–∏—Ñ—Ä–æ–≤—ã–º–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏.\n"
        "–û–±—â–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ —Å–æ –≤—Å–µ–º–∏ ‚Äî –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.\n\n"
        "üí° <b>–î–ª—è –æ–±—â–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≥–æ–ª–æ—Å–∞:</b>\n"
        "1 –≥–æ–ª–æ—Å = 1 –æ—Ç–≤–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞\n\n"
        "‚öôÔ∏è <b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</b>\n"
        "‚Ä¢ –í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–ª–æ—Å–æ–≤\n"
        "‚Ä¢ –û–±—â–∞–π—Å—è —Å –ª—é–±—ã–º–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏\n"
        "‚Ä¢ –ì–æ–ª–æ—Å–∞ –¥–µ–π—Å—Ç–≤—É—é—Ç 60 –¥–Ω–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–∫—É–ø–∫–∏\n\n"
        "üíº <b>–í—ã–±–µ—Ä–∏ —Å–≤–æ–π —Ç–∞—Ä–∏—Ñ:</b>\n\n"
        "üïØÔ∏è <b>Lite</b> ‚Äî 100 –≥–æ–ª–æ—Å–æ–≤ ‚Äî <b>149‚ÇΩ</b>\n"
        "üí† <b>Pro</b> ‚Äî 250 –≥–æ–ª–æ—Å–æ–≤ ‚Äî <b>249‚ÇΩ</b>\n"
        "‚ôæ <b>Ultra</b> ‚Äî 500 –≥–æ–ª–æ—Å–æ–≤ ‚Äî <b>379‚ÇΩ</b>\n\n"
        "–í—ã–±–µ—Ä–∏ —Ç–∞—Ä–∏—Ñ üëáüèª"
    )

    keyboard = types.InlineKeyboardMarkup(row_width=2)
    keyboard.row(
        types.InlineKeyboardButton("üïØÔ∏è Lite", callback_data="lite_payment"),
        types.InlineKeyboardButton("üí† Pro", callback_data="pro_payment")
    )
    keyboard.add(types.InlineKeyboardButton("‚ôæ Ultra", callback_data="ultra_payment"))
    keyboard.add(types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="menu"))

    if is_callback:
        await target.edit_text(text, reply_markup=keyboard, parse_mode="HTML")
    else:
        await target.reply(text, reply_markup=keyboard, parse_mode="HTML")
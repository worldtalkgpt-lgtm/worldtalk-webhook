from aiogram import types
from aiogram.dispatcher import Dispatcher
import logging

from db.session import get_session
from utils.faiss_searcher import FAISSSearcher
from db.user_repo import (
    get_or_create_user,
    set_character_topic,
    reset_other_character_topics
)
from config import FAISS_CONFIG

logger = logging.getLogger(__name__)

CHARACTER_NAME = "arni"
searcher = FAISSSearcher(
    index_path=FAISS_CONFIG[CHARACTER_NAME]["index_path"],
    mapping_path=FAISS_CONFIG[CHARACTER_NAME]["mapping_path"]
)

# üìå –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–º –ø–æ—Å–ª–µ —Ñ–µ–π—Å–∫–æ–Ω—Ç—Ä–æ–ª—è
async def show_arni_topics(callback_query: types.CallbackQuery):
    await callback_query.answer()

    keyboard = types.InlineKeyboardMarkup(row_width=2)
    # –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞
    keyboard.row(
        types.InlineKeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏ —Ç–µ–ª–æ", callback_data="arnold_topic_–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏ —Ç–µ–ª–æ"),
        types.InlineKeyboardButton("ü•á Mr.Olimpia", callback_data="arnold_topic_–ú–∏—Å—Ç–µ—Ä –û–ª–∏–º–ø–∏—è"),
    )
    # –≤—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞
    keyboard.row(
        types.InlineKeyboardButton("üèõÔ∏è –ü–æ–ª–∏—Ç–∏–∫–∞ –∏ –ø–æ—Å—Ç –≥—É–±–µ—Ä–Ω–∞—Ç–æ—Ä–∞", callback_data="arnold_topic_–ü–æ–ª–∏—Ç–∏–∫–∞ –∏ –ø–æ—Å—Ç –≥—É–±–µ—Ä–Ω–∞—Ç–æ—Ä–∞"),
    )
    # —Ç—Ä–µ—Ç—å—è —Å—Ç—Ä–æ–∫–∞
    keyboard.row(
        types.InlineKeyboardButton("üöÄ –ú–æ—ë –ù–∞—á–∞–ª–æ", callback_data="arnold_topic_–ú–æ—ë –Ω–∞—á–∞–ª–æ"),
        types.InlineKeyboardButton("üé¨ –ì–æ–ª–ª–∏–≤—É–¥", callback_data="arnold_topic_–ì–æ–ª–ª–∏–≤—É–¥"),
    )
    # —á–µ—Ç–≤—ë—Ä—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
    keyboard.row(
        types.InlineKeyboardButton("ü§ù –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ", callback_data="arnold_topic_–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ"),
    )

    # –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
    keyboard.add(types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="select_character"))

    text = (
        "<b>‚îå ‚úÖ –§–µ–π—Å–∫–æ–Ω—Ç—Ä–æ–ª—å –ø—Ä–æ–π–¥–µ–Ω ‚îê</b>\n"
        "|\n"
        "–î–æ—Å—Ç—É–ø –æ—Ç–∫—Ä—ã—Ç.\n"
        "–ü–µ—Ä–µ–¥ —Ç–æ–±–æ–π ‚Äî –¥–∏–∞–ª–æ–≥ —Å –ª–µ–≥–µ–Ω–¥–æ–π.\n"
        "|\n"
        "<b>‚îî ü¶æ –í—ã–±–µ—Ä–∏ —Ç–µ–º—É –¥–ª—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ ‚îò</b>"
    )

    await callback_query.message.edit_text(
        text,
        parse_mode="HTML",
        reply_markup=keyboard
    )

# üìå –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã
async def handle_topic_selected(callback_query: types.CallbackQuery):
    await callback_query.answer()
    topic = callback_query.data.replace("arnold_topic_", "").strip()
    async with get_session() as session:
        user = await get_or_create_user(session, callback_query.from_user.id)
        await reset_other_character_topics(session, user.id, CHARACTER_NAME)
        await set_character_topic(session, user.id, CHARACTER_NAME, topic)

        # –¢—É—Ç –±–æ–ª—å—à–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ ‚Äî –æ–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ—Å–ª–µ —Ñ–µ–π—Å–∫–æ–Ω—Ç—Ä–æ–ª—è
        await callback_query.message.answer(
            f"üü¢ –¢—ã –≤—ã–±—Ä–∞–ª —Ç–µ–º—É: <b>{topic}</b>\n<i>–î–∞–≤–∞–π –Ω–∞—á–Ω—ë–º —Ä–∞–∑–≥–æ–≤–æ—Ä...</i>",
            parse_mode="HTML"
        )

def setup(dp: Dispatcher):
    dp.register_callback_query_handler(show_arni_topics, lambda c: c.data == "arnold_correct")
    dp.register_callback_query_handler(handle_topic_selected, lambda c: c.data.startswith("arnold_topic_"))
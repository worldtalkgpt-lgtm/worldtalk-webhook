from aiogram import types
from aiogram.dispatcher import Dispatcher

def setup(dp: Dispatcher):
    @dp.callback_query_handler(lambda c: c.data == "select_character")
    async def process_character_selection(callback_query: types.CallbackQuery):
        keyboard = types.InlineKeyboardMarkup(row_width=2)

        # ‚úÖ –ö–Ω–æ–ø–∫–∏: –õ–∏–æ–Ω–µ–ª—å –ú–µ—Å—Å–∏ ‚Äî –æ–¥–∏–Ω –≤ —Ä—è–¥—É
        keyboard.row(
            types.InlineKeyboardButton("üá¶üá∑ –õ–∏–æ–Ω–µ–ª—å –ú–µ—Å—Å–∏", callback_data="messi")
        )
        # ‚úÖ –ö–Ω–æ–ø–∫–∏: MrBeast –∏ –ê—Ä–Ω–æ–ª—å–¥ –®–≤–∞—Ä—Ü–µ–Ω–µ–≥–≥–µ—Ä –≤–æ –≤—Ç–æ—Ä–æ–º —Ä—è–¥—É
        keyboard.row(
            types.InlineKeyboardButton("üé• MrBeast", callback_data="beast"),
            types.InlineKeyboardButton("ü¶ç –ê—Ä–Ω–æ–ª—å–¥ –®–≤–∞—Ä—Ü–µ–Ω–µ–≥–≥–µ—Ä", callback_data="arnold"),
        )
        # ‚úÖ –ö–Ω–æ–ø–∫–∞ ¬´–ù–∞–∑–∞–¥¬ª –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π
        keyboard.row(
            types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="menu")
        )

        description = (
            "<b>üåü –ü–µ—Ä—Å–æ–Ω–∞–∂–∏</b>\n"
            "–í—ã–±–µ—Ä–∏ –ª–µ–≥–µ–Ω–¥—É, —Å –∫–æ—Ç–æ—Ä–æ–π –Ω–∞—á–Ω—ë—à—å –¥–∏–∞–ª–æ–≥:\n\n"
            "üá¶üá∑ <b>–õ–∏–æ–Ω–µ–ª—å –ú–µ—Å—Å–∏</b>\n"
            "8 ¬´–ó–æ–ª–æ—Ç—ã—Ö –º—è—á–µ–π¬ª ‚Ä¢ –ß–µ–º–ø–∏–æ–Ω –º–∏—Ä–∞ 2022\n"
            "–ñ–∏–≤—ã–µ —ç–º–æ—Ü–∏–∏ —Ñ—É—Ç–±–æ–ª–∞\n\n"
            "üé• <b>MrBeast</b>\n"
            "250+ –º–ª–Ω –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ ‚Ä¢ –ú–∏–ª–ª–∏–æ–Ω—ã —Ä–æ–∑–¥–∞–Ω–Ω—ã—Ö $\n"
            "–≠–Ω–µ—Ä–≥–∏—è –º–∏–ª–ª–∏–∞—Ä–¥–æ–≤ –∑—Ä–∏—Ç–µ–ª–µ–π\n\n"
            "ü¶ç <b>–ê—Ä–Ω–æ–ª—å–¥ –®–≤–∞—Ä—Ü–µ–Ω–µ–≥–≥–µ—Ä</b>\n"
            "7√ó ¬´–ú–∏—Å—Ç–µ—Ä –û–ª–∏–º–ø–∏—è¬ª ‚Ä¢ –ó–≤–µ–∑–¥–∞ ¬´–¢–µ—Ä–º–∏–Ω–∞—Ç–æ—Ä–∞¬ª\n"
            "–°–∏–ª–∞ –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—è\n\n"
            "–ö–æ–≥–æ –≤—ã–±–µ—Ä–µ—à—å? üåé"
        )

        await callback_query.message.edit_text(
            description,
            reply_markup=keyboard,
            parse_mode="HTML"
        )
from aiogram import types
from aiogram.dispatcher import Dispatcher
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from urllib.parse import quote

from db.session import get_session
from db.user_repo import get_invited_this_week

def setup(dp: Dispatcher):
    @dp.callback_query_handler(lambda c: c.data == "referral")
    async def referral_callback(callback_query: types.CallbackQuery):
        await send_referral(callback_query.from_user.id, callback_query.message, is_callback=True)

    @dp.message_handler(commands=["referral"])
    async def referral_command(message: types.Message):
        await send_referral(message.from_user.id, message)


async def send_referral(user_id, target, is_callback=False):
    invite_link = f"https://t.me/WorldTalkBot?start=ref_{user_id}"
    share_text = f"üéØ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ WorldTalk –∏ –ø–æ–ª—É—á–∏ –≥–æ–ª–æ—Å –ª–µ–≥–µ–Ω–¥—ã!\n\n@WorldTalkBot {invite_link}"
    encoded_text = quote(share_text)
    share_url = f"https://t.me/share/url?url={encoded_text}"

    async with get_session() as session:
        invited = await get_invited_this_week(session, user_id)
        voices_earned = invited * 20
        remaining = max(0, 5 - invited)

    # ‚ú® –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –ª–∏–Ω–∏–µ–π –ø–æ—Å–ª–µ –±–ª–æ–∫–∞ –º–∞–∫—Å–∏–º—É–º
    text = (
        "<b>‚îå üéØ 1 –¥—Ä—É–≥ = +20 –≥–æ–ª–æ—Å–æ–≤ ‚îê</b>\n"
        "\n"
        "üçÄ–ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–∑–µ–π –≤ WorldTalk.\n"
        "–ö–∞–∫ —Ç–æ–ª—å–∫–æ –æ–Ω–∏ –ø—Ä–æ–π–¥—É—Ç —Ñ–µ–π—Å–∫–æ–Ω—Ç—Ä–æ–ª—å.\n"
        "–¢—ã –ø–æ–ª—É—á–∏—à—å + 20 –≥–æ–ª–æ—Å–æ–≤!\n\n\n"
        "üìä–¢–≤–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:\n"
        f"‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ: <b>{invited}</b>\n"
        f"‚Ä¢ –ì–æ–ª–æ—Å–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ: <b>{voices_earned}</b>\n"
        f"‚Ä¢ –û—Å—Ç–∞–ª–æ—Å—å –≤ –ª–∏–º–∏—Ç–µ: <b>{remaining}</b>\n"
        "<b>‚îî üì© –ü–æ–¥–µ–ª–∏—Ç—å—Å—è ‚îò</b>"
    )

    markup = InlineKeyboardMarkup(row_width=1)
    markup.add(
        InlineKeyboardButton("üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π", url=share_url),
        InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="menu")
    )

    if is_callback:
        await target.edit_text(text, parse_mode="HTML", reply_markup=markup)
    else:
        await target.reply(text, parse_mode="HTML", reply_markup=markup)